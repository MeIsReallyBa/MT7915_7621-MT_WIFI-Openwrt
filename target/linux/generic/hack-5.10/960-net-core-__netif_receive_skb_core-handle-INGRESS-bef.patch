From a1a950bf30779e78162ee33f90ddc0c44808a55b Mon Sep 17 00:00:00 2001
From: Chen Minqiang <ptpt52@gmail.com>
Date: Tue, 7 Apr 2020 15:04:41 +0800
Subject: [PATCH 1/4] net/core: __netif_receive_skb_core handle INGRESS before
 taps

Signed-off-by: Chen Minqiang <ptpt52@gmail.com>
---
 net/core/dev.c | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -5268,6 +5268,21 @@ another_round:
 	if (skb_skip_tc_classify(skb))
 		goto skip_classify;
 
+#ifdef CONFIG_NET_INGRESS
+	if (static_branch_unlikely(&ingress_needed_key)) {
+		bool another = false;
+
+		skb = sch_handle_ingress(skb, &pt_prev, &ret, orig_dev,
+					 &another);
+		if (another)
+			goto another_round;
+		if (!skb)
+			goto out;
+
+		if (nf_ingress(skb, &pt_prev, &ret, orig_dev) < 0)
+			goto out;
+	}
+#endif
 	if (pfmemalloc)
 		goto skip_taps;
 
@@ -5284,21 +5299,6 @@ another_round:
 	}
 
 skip_taps:
-#ifdef CONFIG_NET_INGRESS
-	if (static_branch_unlikely(&ingress_needed_key)) {
-		bool another = false;
-
-		skb = sch_handle_ingress(skb, &pt_prev, &ret, orig_dev,
-					 &another);
-		if (another)
-			goto another_round;
-		if (!skb)
-			goto out;
-
-		if (nf_ingress(skb, &pt_prev, &ret, orig_dev) < 0)
-			goto out;
-	}
-#endif
 	skb_reset_redirect(skb);
 skip_classify:
 	if (pfmemalloc && !skb_pfmemalloc_protocol(skb))
